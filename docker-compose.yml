# ─── bloco base DRY ──────────────────────────────────────────
x-app-base: &app-base
  build: .
  working_dir: /app
  environment:
    PYTHONUNBUFFERED: "1"
    PYTHONPATH: /app
  volumes:
    - .:/app
  env_file: [.env]
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

# ─── serviços ───────────────────────────────────────────────
services:
  api:
    <<: *app-base
    container_name: vigia_api
    volumes:
      - ./secrets:/secrets:ro
    environment:
      ROLE: api
    ports: ["8026:8026"]

  worker:
    <<: *app-base
    container_name: vigia_worker
    environment:
      ROLE: worker

  pje-worker:
    <<: *app-base
    container_name: vigia_pje_worker
    command: ["python", "-m", "vigia.services.pje_worker"]
    volumes:
      - ./secrets:/secrets:ro
    environment:
      ROLE: pje-worker
      PJE_PFX_PATH: /secrets/24853997.pfx
      PJE_PFX_PASS: ${PJE_PFX_PASS:-}
      PJE_HEADLESS_PORT: 8800
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8800:8800"

  redis:
    image: redis:7-alpine
    container_name: vigia_redis
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    container_name: vigia_postgres
    environment:
      POSTGRES_DB:     ${POSTGRES_DB}
      POSTGRES_USER:   ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports: ["5432:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  whatsapp-dashboard:
    build:
      context: ./vigia/departments/negotiation_whatsapp/dashboard
      dockerfile: Dockerfile
    container_name: whatsapp_vigia_dashboard
    ports: ["8501:8501"]
    volumes:
      - ./vigia/departments/negotiation_whatsapp/dashboard:/app
    env_file: [.env]
    depends_on:
      postgres:
        condition: service_healthy
  
  email-dashboard:
    build:
      context: ./vigia/departments/negotiation_email/dashboard
      dockerfile: Dockerfile
    container_name: negotiation_email
    ports: ["8502:8502"]
    volumes:
      - ./vigia/departments/negotiation_email/dashboard:/app
    env_file: [.env]
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  chrome_profile:
